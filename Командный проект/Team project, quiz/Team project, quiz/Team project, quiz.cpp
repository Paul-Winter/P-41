// __________ВИКТОРИНА__________
// Реализовать игру "Викторина".
// Пользователь выбирает раздел знаний(например: игры, кино, музыка, путешествия и т.д.),
// и получает набор вопросов по выбранной тематике.
// У каждого вопроса должно быть четыре варианта ответа.
// У каждого вопроса есть свой коэффициент сложности.
// За каждый правильный ответ пользователь получает один балл,
// умноженный на коэффициент сложности.
// Когда пользователь ответит на все вопросы, на экране отображается набранная сумма баллов.
// Для повышения уровня сложности приложения информацию можно читать и записывать в файл.
// Также для повышения уровня сложности можно реализовать
// механизм турнирной таблицы (отображает позицию пользователя по конкретному разделу знаний).
//
// задача Дымочкиной:
//   подготовить для 5 тем (игры, кино, музыка, путешествия, литература)
//   по 10 вопросов + коэффициент сложности на каждую по 4 варианта ответа
//   (только один вариант правильный) результат оформить в текстовый файл
//
// задача Сухоты:
//   создать структуру "вопрос-ответы" с одним правильным вариантом
//
// задача Середа: 
//   создать структуру "пользователь" в которой будет собираться его статистика:
//   имя_пользователя, его пароль, статистика по темам пройденных викторин
//   (сколько набрал баллов / сколько всего можно набрать баллов)
//
// задача Бочарова: 
//   реализовать механизм сохранения в файл данных структуры "пользователь" и
//   механизм считывания из файла данных "пользователей" для оформления статистики
//
// задача Лобозева:
//   определить принцип формирования таблицы статистики и вывода её в консоль
//
// задача Газаряна:
//   создать "ядро" программы "викторина":
//   меню пользователя: запрос темы, регистрация пользователя,
//   авторизация пользователя, запуск "викторины" согласно выбранной темы,
//   вывод статистики и сохранение результатов пользователя

#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <array>

using namespace std;

// Структура "User" (Пользователь)
struct User
{
    string name;
    string password;
    array<string, 5> quizStats;
    User()
    {
        for (auto& topic : quizStats)
        {
            topic = "0/0";
        }
    }

    //Функция для записи данных пользователя в файл
    void writeToFile(ofstream& file) const
    {
        file << name << " " << password << " " << endl;
    }

    //Функция для считывания данных пользователя из файла
    static User readFromFile(ifstream& file)
    {
        User user;
        file >> user.name >> user.password;
        return user;
    }

    //Функция для записи всех пользователей в файл
    void saveUsersToFile(const vector<User>& users, const string& filename)
    {
        ofstream file(filename);
        if (!file.is_open())
        {
            cout << "Ошибка при открытии файла! " << endl;
            return;
        }
        for (const auto& user : users)
        {
            user.writeToFile(file);
        }
        cout << "Данные успешно сохранены в файл! " << endl;
        file.close();
    }

    //Функция для считывания всех пользователей из файла
    vector<User> loadUsersFromFile(const string& filename)
    {
        vector<User> users;
        ifstream file(filename);

        if (!file.is_open())
        {
            cout << "Ошибка при открытии файла! " << endl;
            return users;
        }

        while (!file.eof())
        {
            users.push_back(User::readFromFile(file));
        }

        file.close();
        cout << "Данные успешно считаны из файла! " << endl;
        return users;
    }
};

//Принцип формирования таблицы статистики пользователя
void table(string names[], double game[], double cinema[], double music[], double travel[],double literature[], double point[], int count)
{
    cout << " -------------------------------------------------------------------------------------------------- " << endl;
    cout << "|                                 Статистика пользователя                                          |" << endl;
    cout << " -------------------------------------------------------------------------------------------------- " << endl;
    cout << "|      Имя       |  Игры  |    Кино   |    Музыка   |    Путешествие   |    Литература   |  Баллы  |" << endl;
    cout << " -------------------------------------------------------------------------------------------------- " << endl;

    for (int i = 0; i < count; i++)
    {
        cout << "| " << names[i];

        int spac = 9 - names[i].length();
        for (int j = 0; j < spac; j++)
        {
            cout << " ";
            cout << "|   " <<game[i]<<"   |   " <<cinema[i]<< "   |   "<<music[i]<<"   |   "<<travel[i]<<"   |   "<<literature[i]<<"   |   "<<point[i]<< "  |"<<endl;
        }
    }
    cout << " -------------------------------------------------------------------------------------------------- " << endl;
}


int main()
{
    setlocale(LC_ALL, "");
    system("color 2");
    srand(time(NULL));

    cout << "Добро пожаловать!";
    cout << "Это викторина, пока еще никем несозданная!";

    //      Ядро
    string strans;
    cout << "\nХотите сыграть в игру(Да/Нет)\nОтвет:";
    cin >> strans;

    if (strans == "Нет")
    {
        cout << "Увидимся в следующий раз!";
        return 0;
    }
    else if(strans == "Да")
    {
        cout << "\nВы зарегистрированы?(Да/Нет)\nОтвет:";
        cin >> strans;

        if (strans == "Да")
        {
            string log, pass;
            cout << "\nАВТОРИЗАЦИЯ:\nВведите логин: ";
            cin >> log;
            cout << "\nВведите пароль: ";
            cin >> pass;
            // Дописать проверку пароля заполнение структуры
        }
        
        User user;

        // Ввод имени пользователя
        cout << "Введите имя пользователя (На английском): " << endl;
        getline(cin, user.name);

        // Ввод пароля
        cout << "Введите пароль: " << endl;
        getline(cin, user.password);

        // Подтверждение сохранения данных
        cout << "Данные успешно сохранены" << endl;
        cout << "Имя пользователя: " << user.name << endl;
        cout << "Пароль: " << user.password << endl;

        // Вывод статистики по темам
        cout << "статистика по темам (я не знаю как это заполнить):" << endl;
        for (size_t i = 0; i < user.quizStats.size(); ++i)
        {
            cout << "Тема" << i + 1 << " : " << user.quizStats[i] << endl;
        }


        //------------------------------------------------------------------------------------------------
 
        //Роман, проверяйте код на ошибки!

        //------------------------------------------------------------------------------------------------


        // Регистрация пользователя (Логин, пароль, имя, фамилия, возраст, пол, класс/курс)
        else
        {
            cout << "\nРЕГИСТРАЦИЯ:\nВведите логин: ";

            cout << "\nВведите пароль: ";

            cout << "\nВведите ваше имя: ";

            cout << "\nВведите вашу фамилию: ";

            cout << "\nВведите ваш возраст: ";

            cout << "\nВведите ваш пол(мужской/женский): ";

            cout << "\nВведите в каком вы классе(если нет - 0): ";

            cout << "\nВведите на каком вы курсе(если нет - 0): ";
        }

        cout << "\nВведите номер темы:\n1. Игры \n2. Кино \n3. Музыка \n4. Путешествия \n5. Литература\nВаш выбор: ";
        int ans = 0;
        cin >> ans;

        //ВИКТОРИНА
        string surname;
        string name;
        switch (ans)
        {
        case 1:cout << "\n\n\n\n\n\n\n\n\nПривет, " << name << " " << surname << "\nНачинаем викторину на тему: Игры\nТебе будет задано 10 вопросов с 1 правильным ответом, каждый вопрос оценивается в 1 балл\nУдачи!";
            //Викторина игры
        case 2:cout << "\n\n\n\n\n\n\n\n\nПривет, " << name << " " << surname << "\nНачинаем викторину на тему: Кино\nТебе будет задано 10 вопросов с 1 правильным ответом, каждый вопрос оценивается в 1 балл\nУдачи!";
        case 3:cout << "\n\n\n\n\n\n\n\n\nПривет, " << name << " " << surname << "\nНачинаем викторину на тему: Музыка\nТебе будет задано 10 вопросов с 1 правильным ответом, каждый вопрос оценивается в 1 балл\nУдачи!";
        case 4:cout << "\n\n\n\n\n\n\n\n\nПривет, " << name << " " << surname << "\nНачинаем викторину на тему: Путешествие\nТебе будет задано 10 вопросов с 1 правильным ответом, каждый вопрос оценивается в 1 балл\nУдачи!";
        case 5:cout << "\n\n\n\n\n\n\n\n\nПривет, " << name << " " << surname << "\nНачинаем викторину на тему: Литература\nТебе будет задано 10 вопросов с 1 правильным ответом, каждый вопрос оценивается в 1 балл\nУдачи!";
        default:cout << "Вводите данные правильно!";
            return 0;
        }
    }
    else
    {
        cout << "Ошибка!";
    }
    return 0;
}
// Если что по пробелам в заметках можно понять что вы через нейронку делали!:)